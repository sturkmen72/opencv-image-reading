# Copyright (c) the JPEG XL Project Authors. All rights reserved.
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Workflow for building the release binaries.
#
# This workflow runs as a post-submit step, when pushing to main or the release
# branches (v*.*.x), and when creating a release in GitHub.
#
# In the GitHub release case, in addition to build the release binaries it also
# uploads the binaries to the given release automatically.

name: Release build / deploy
on:
  merge_group:
  push:
    branches:
      - main
      - v*.*.x
  pull_request:
    types: [opened, reopened, labeled, unlabeled, synchronize]
    paths-ignore:
      - '**.md'
      - 'AUTHORS'
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  windows_build:
    name: Windows Build (vcpkg / ${{ matrix.triplet }})
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'CI:none') }}
    runs-on: [windows-2022]
    strategy:
      fail-fast: false
      matrix:
        include:
          - triplet: x86-windows-static
            arch: '-A Win32'
          - triplet: x64-windows-static
            arch: '-A x64'
            run_benchmark: true
          - triplet: x86-windows
            arch: '-A Win32'
            static: 'OFF'
            tools: 'OFF'
          - triplet: x64-windows
            arch: '-A x64'
            static: 'OFF'
            tools: 'OFF'

    env:
      VCPKG_VERSION: '2023.12.12'
      VCPKG_ROOT: vcpkg
      VCPKG_DISABLE_METRICS: 1

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
      with:
        egress-policy: audit

    - name: Checkout the source
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: true
        fetch-depth: 2

    - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      id: cache-vcpkg
      with:
        path: vcpkg
        key: release-${{ runner.os }}-vcpkg-${{ env.VCPKG_VERSION }}-${{ matrix.triplet }}

    - name: Download vcpkg
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      # wget doesn't seem to work under bash.
      shell: 'powershell'
      run: |
        C:\msys64\usr\bin\wget.exe -nv `
           https://github.com/microsoft/vcpkg/archive/refs/tags/${{ env.VCPKG_VERSION }}.zip `
          -O vcpkg.zip
    - name: Bootstrap vcpkg
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      shell: 'bash'
      run: |
        set -x
        unzip -q vcpkg.zip
        rm -rf ${VCPKG_ROOT}
        mv vcpkg-${VCPKG_VERSION} ${VCPKG_ROOT}
        ${VCPKG_ROOT}/bootstrap-vcpkg.sh

    - name: Install libraries with vcpkg
      shell: 'bash'
      run: |
        set -x
        ${VCPKG_ROOT}/vcpkg --triplet ${{ matrix.triplet }} install \
          giflib \
          libjpeg-turbo \
          libpng \
          libwebp \
          libjxl \
          libavif \
          pkgconf \
        #

    - name: Configure
      shell: 'bash'
      run: |
        set -x
        git clone --depth=1 --branch=avif_cmake https://github.com/sturkmen72/opencv.git
        mkdir build
        cmake -Bbuild -H. ${{ matrix.arch }} \
          -DWITH_JPEGXL=ON \
          -DWITH_ZLIB_NG=OFF \
          -DWITH_IMGCODEC_GIF=ON \
          -DWITH_SPNG=OFF \
          -DWITH_JPEG=ON \
          -DWITH_TIFF=OFF \
          -DWITH_JASPER=OFF \
          -DWITH_OPENEXR=OFF \
          -DWITH_IPP=OFF \
          -DWITH_ADE=OFF \
          -DWITH_ITT=OFF \
          -DBUILD_PERF_TESTS=ON \
          -DBUILD_OPENJPEG=OFF \
          -DBUILD_PROTOBUF=OFF \
          -DBUILD_JAVA=OFF \
          -DBUILD_opencv_apps=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=`pwd`/prefix \
          -DCMAKE_TOOLCHAIN_FILE=D:/a/opencv-image-reading/opencv-image-reading/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DBUILD_opencv_dnn=OFF \
          -DBUILD_opencv_gapi=OFF \
          -DBUILD_opencv_features2d=OFF \
          -DBUILD_opencv_flann=OFF \
          -DBUILD_opencv_video=OFF \
          -DBUILD_opencv_ml=OFF \
          -DBUILD_opencv_objdetect=OFF \
          -DBUILD_opencv_photo=OFF \
          -DBUILD_opencv_calib3d=OFF \
          -DBUILD_opencv_stitching=OFF \
          ./opencv



